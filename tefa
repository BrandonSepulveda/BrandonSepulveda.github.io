<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mi Dragon Dream Personal - Editable</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .edit-mode {
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1000;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .edit-btn, .save-btn, .add-btn {
            padding: 12px 20px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .edit-btn {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            color: white;
        }

        .save-btn {
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
            color: white;
        }

        .add-btn {
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
            color: white;
        }

        .edit-btn:hover, .save-btn:hover, .add-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px;
            backdrop-filter: blur(10px);
        }

        .editable {
            position: relative;
            cursor: text;
            transition: all 0.3s ease;
        }

        .editable:hover::after {
            content: '✏️';
            position: absolute;
            top: -10px;
            right: -10px;
            background: #3498db;
            color: white;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            opacity: 0.8;
            z-index: 10;
        }

        .editable[contenteditable="true"] {
            border: 2px dashed #3498db;
            padding: 5px;
            border-radius: 5px;
            background: rgba(52, 152, 219, 0.1);
        }

        .deletable {
            position: relative;
        }

        .deletable:hover .delete-btn {
            display: block;
        }

        .delete-btn {
            display: none;
            position: absolute;
            top: -10px;
            right: -10px;
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            cursor: pointer;
            font-size: 12px;
            z-index: 100;
        }

        .color-picker {
            position: fixed;
            top: 200px;
            left: 20px;
            z-index: 1000;
            background: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            display: none;
        }

        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin: 5px;
            cursor: pointer;
            display: inline-block;
            border: 2px solid transparent;
        }

        .color-option:hover {
            border-color: #333;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .title {
            font-size: 2.5em;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .subtitle {
            font-size: 1.2em;
            color: #7f8c8d;
            font-style: italic;
        }

        .dragon-circle {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 40px 0;
            position: relative;
            height: 400px;
        }

        .circle-container {
            position: relative;
            width: 350px;
            height: 350px;
            border: 4px solid #3498db;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(52, 152, 219, 0.1) 0%, transparent 70%);
        }

        .phase {
            position: absolute;
            width: 120px;
            height: 120px;
            border-radius: 50%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            color: white;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        .phase:hover {
            transform: scale(1.1);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
        }

        .phase-icon {
            font-size: 2em;
            margin-bottom: 5px;
        }

        .phase-text {
            font-size: 0.9em;
            font-weight: bold;
        }

        .sonar {
            top: -60px;
            left: 115px;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }

        .planificar {
            top: 115px;
            right: -60px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        .realizar {
            bottom: -60px;
            left: 115px;
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }

        .celebrar {
            top: 115px;
            left: -60px;
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        }

        .center-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            color: #2c3e50;
            font-weight: bold;
            font-size: 1.1em;
            cursor: pointer;
        }

        .arrows {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px;
            height: 300px;
        }

        .arrow {
            position: absolute;
            width: 0;
            height: 0;
            border-style: solid;
        }

        .arrow-1 {
            top: 30px;
            right: 120px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(45deg);
        }

        .arrow-2 {
            top: 120px;
            right: 30px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(135deg);
        }

        .arrow-3 {
            bottom: 30px;
            right: 120px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(225deg);
        }

        .arrow-4 {
            top: 120px;
            left: 30px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(315deg);
        }

        .section {
            margin: 40px 0;
            padding: 30px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 15px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

        .section-title {
            font-size: 1.8em;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
            font-weight: bold;
        }

        .timeline {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 30px 0;
            padding: 20px;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            border-radius: 10px;
            color: white;
        }

        .timeline-item {
            text-align: center;
            flex: 1;
            padding: 10px;
            position: relative;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 10px;
        }

        .timeline-item:hover {
            transform: scale(1.05);
            background: rgba(255, 255, 255, 0.2);
        }

        .timeline-item:not(:last-child)::after {
            content: '→';
            position: absolute;
            right: -15px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 1.5em;
            color: white;
        }

        .timeline-month, .timeline-phase {
            font-weight: bold;
            font-size: 1.1em;
            margin-bottom: 5px;
        }

        .timeline-phase {
            font-size: 0.9em;
            opacity: 0.9;
        }

        .metrics {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .metric-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .metric-card:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
        }

        .metric-value {
            font-size: 2em;
            font-weight: bold;
            color: #3498db;
            margin-bottom: 10px;
        }

        .metric-label {
            color: #7f8c8d;
            font-size: 0.9em;
        }

        .progress-bar {
            width: 100%;
            height: 20px;
            background: #ecf0f1;
            border-radius: 10px;
            margin: 10px 0;
            overflow: hidden;
            cursor: pointer;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #43e97b 0%, #38f9d7 100%);
            border-radius: 10px;
            transition: width 0.5s ease;
        }

        .mandala {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 40px 0;
            position: relative;
            height: 300px;
        }

        .mandala-center {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-weight: bold;
            text-align: center;
            font-size: 1.1em;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .mandala-center:hover {
            transform: scale(1.05);
        }

        .mandala-element {
            position: absolute;
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-weight: bold;
            font-size: 0.8em;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .mandala-element:hover {
            transform: scale(1.2);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);
        }

        .salud { top: 0; left: 50%; transform: translateX(-50%); background: #f093fb; }
        .carrera { top: 50%; right: 0; transform: translateY(-50%); background: #4facfe; }
        .relaciones { bottom: 0; left: 50%; transform: translateX(-50%); background: #43e97b; }
        .crecimiento { top: 50%; left: 0; transform: translateY(-50%); background: #fa709a; }
        .finanzas { top: 20%; left: 20%; background: #38f9d7; }
        .pasiones { top: 20%; right: 20%; background: #fee140; }

        .value-card {
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .value-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .value-card:hover::before {
            left: 100%;
        }

        .value-card:hover {
            transform: scale(1.05);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }

        .add-section-btn {
            width: 100%;
            padding: 20px;
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
            color: white;
            border: 2px dashed white;
            border-radius: 15px;
            cursor: pointer;
            font-size: 1.2em;
            font-weight: bold;
            transition: all 0.3s ease;
            margin: 20px 0;
        }

        .add-section-btn:hover {
            transform: scale(1.02);
            box-shadow: 0 8px 16px rgba(52, 152, 219, 0.4);
        }

        .template-selector {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            z-index: 2000;
            display: none;
            max-width: 500px;
            width: 90%;
        }

        .template-option {
            padding: 15px;
            border: 2px solid #ecf0f1;
            border-radius: 10px;
            margin: 10px 0;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .template-option:hover {
            border-color: #3498db;
            background: rgba(52, 152, 219, 0.1);
        }

        .habit-tracker {
            display: flex;
            gap: 5px;
            align-items: center;
        }

        .day-circle {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .day-circle.completed {
            background: #2ecc71;
            color: white;
        }

        .day-circle.incomplete {
            background: #ecf0f1;
            color: #7f8c8d;
        }

        .day-circle:hover {
            transform: scale(1.1);
        }

        @media (max-width: 768px) {
            .container { padding: 20px; }
            .title { font-size: 2em; }
            .dragon-circle { height: 300px; }
            .circle-container { width: 280px; height: 280px; }
            .phase { width: 90px; height: 90px; font-size: 0.8em; }
            .timeline { flex-direction: column; gap: 10px; }
            .timeline-item::after { display: none; }
            .edit-mode { position: relative; top: 0; left: 0; margin-bottom: 20px; }
        }
    </style>
</head>
<body>
    <!-- Panel de Edición -->
    <div class="edit-mode">
        <button class="edit-btn" onclick="toggleEditMode()">🔧 Modo Edición</button>
        <button class="save-btn" onclick="saveChanges()" style="display: none;">💾 Guardar</button>
        <button class="add-btn" onclick="showTemplateSelector()">➕ Agregar Sección</button>
        <button class="edit-btn" onclick="showColorPicker()">🎨 Cambiar Colores</button>
    </div>

    <!-- Selector de Colores -->
    <div class="color-picker" id="colorPicker">
        <h4>Cambiar Color de Fondo:</h4>
        <div class="color-option" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);" onclick="changeBackgroundColor('#667eea', '#764ba2')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);" onclick="changeBackgroundColor('#ff9a9e', '#fecfef')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);" onclick="changeBackgroundColor('#a8edea', '#fed6e3')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);" onclick="changeBackgroundColor('#ffecd2', '#fcb69f')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%);" onclick="changeBackgroundColor('#a18cd1', '#fbc2eb')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 100%);" onclick="changeBackgroundColor('#ff6b6b', '#4ecdc4')"></div>
    </div>

    <!-- Selector de Plantillas -->
    <div class="template-selector" id="templateSelector">
        <h3>Agregar Nueva Sección</h3>
        <div class="template-option" onclick="addSection('goals')">
            <strong>🎯 Mis Metas</strong><br>
            <small>Sección para definir objetivos específicos</small>
        </div>
        <div class="template-option" onclick="addSection('habits')">
            <strong>📋 Mis Hábitos</strong><br>
            <small>Tracker de hábitos diarios</small>
        </div>
        <div class="template-option" onclick="addSection('gratitude')">
            <strong>🙏 Gratitud</strong><br>
            <small>Registro de cosas por las que estoy agradecido</small>
        </div>
        <div class="template-option" onclick="addSection('challenges')">
            <strong>💪 Desafíos</strong><br>
            <small>Retos personales para crecer</small>
        </div>
        <div class="template-option" onclick="addSection('custom')">
            <strong>✨ Sección Personalizada</strong><br>
            <small>Crear desde cero</small>
        </div>
        <button onclick="closeTemplateSelector()" style="margin-top: 15px; padding: 10px 20px; background: #e74c3c; color: white; border: none; border-radius: 5px; cursor: pointer;">Cancelar</button>
    </div>

    <div class="container" id="dragon-dream-container">
        <div class="header">
            <h1 class="title editable" contenteditable="false">🐉 Mi Dragon Dream Personal</h1>
            <p class="subtitle editable" contenteditable="false">Transformación y Crecimiento Personal</p>
        </div>

        <div class="dragon-circle deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <div class="circle-container">
                <div class="arrows">
                    <div class="arrow arrow-1"></div>
                    <div class="arrow arrow-2"></div>
                    <div class="arrow arrow-3"></div>
                    <div class="arrow arrow-4"></div>
                </div>
                
                <div class="phase sonar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">💭</div>
                    <div class="phase-text editable" contenteditable="false">SOÑAR</div>
                </div>
                
                <div class="phase planificar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">📋</div>
                    <div class="phase-text editable" contenteditable="false">PLANIFICAR</div>
                </div>
                
                <div class="phase realizar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">🎯</div>
                    <div class="phase-text editable" contenteditable="false">ACTUAR</div>
                </div>
                
                <div class="phase celebrar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">🎉</div>
                    <div class="phase-text editable" contenteditable="false">CELEBRAR</div>
                </div>
                
                <div class="center-text editable" contenteditable="false">
                    <strong>MI VIDA<br>EN EQUILIBRIO</strong>
                </div>
            </div>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">🌟 Mi Visión Personal</h2>
            <p class="editable" contenteditable="false" style="text-align: center; font-size: 1.1em; color: #2c3e50; line-height: 1.6;">
                "Vivir una vida plena y auténtica, donde cada día me acerque más a mi mejor versión, 
                manteniendo equilibrio entre mis relaciones, salud, carrera y crecimiento personal, 
                mientras contribuyo positivamente al mundo que me rodea."
            </p>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">📅 Mi Cronograma de Transformación</h2>
            <div class="timeline">
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 1-3</div>
                    <div class="timeline-phase editable" contenteditable="false">Autoconocimiento</div>
                </div>
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 4-6</div>
                    <div class="timeline-phase editable" contenteditable="false">Construcción de Hábitos</div>
                </div>
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 7-9</div>
                    <div class="timeline-phase editable" contenteditable="false">Acción Sostenida</div>
                </div>
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 10-12</div>
                    <div class="timeline-phase editable" contenteditable="false">Integración y Expansión</div>
                </div>
            </div>
            <button class="add-section-btn" onclick="addTimelineItem()">➕ Agregar Fase</button>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">📊 Mis Indicadores de Progreso</h2>
            <div class="metrics">
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">85%</div>
                    <div class="metric-label editable" contenteditable="false">Bienestar General</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 85%"></div>
                    </div>
                </div>
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">7/10</div>
                    <div class="metric-label editable" contenteditable="false">Metas Cumplidas</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 70%"></div>
                    </div>
                </div>
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">12</div>
                    <div class="metric-label editable" contenteditable="false">Hábitos Positivos</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 90%"></div>
                    </div>
                </div>
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">8/10</div>
                    <div class="metric-label editable" contenteditable="false">Nivel de Energía</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 80%"></div>
                    </div>
                </div>
            </div>
            <button class="add-section-btn" onclick="addMetricCard()">➕ Agregar Nueva Métrica</button>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">🌸 Mandala de Mi Vida</h2>
            <div class="mandala">
                <div class="mandala-center editable" contenteditable="false">
                    VIDA<br>EQUILIBRADA
                </div>
                <div class="mandala-element salud deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">💪<br>SALUD</span>
                </div>
                <div class="mandala-element carrera deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">🎯<br>CARRERA</span>
                </div>
                <div class="mandala-element relaciones deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">❤️<br>RELACIONES</span>
                </div>
                <div class="mandala-element crecimiento deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">🌱<br>CRECIMIENTO</span>
                </div>
                <div class="mandala-element finanzas deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">💰<br>FINANZAS</span>
                </div>
                <div class="mandala-element pasiones deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">🎨<br>PASIONES</span>
                </div>
            </div>
            <button class="add-section-btn" onclick="addMandalaElement()">➕ Agregar Área de Vida</button>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">🎯 Mis Valores Personales</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; text-align: center;">
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🦋 Autenticidad</h3>
                    <p class="editable" contenteditable="false">Ser fiel a mí mismo</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🌱 Crecimiento</h3>
                    <p class="editable" contenteditable="false">Mejora continua</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🤝 Conexión</h3>
                    <p class="editable" contenteditable="false">Relaciones significativas</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #fa709a 0%, #fee140 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">⚖️ Equilibrio</h3>
                    <p class="editable" contenteditable="false">Armonía en todas las áreas</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🌍 Contribución</h3>
                    <p class="editable" contenteditable="false">Impacto positivo</p>
                </div>
            </div>
            <button class="add-section-btn" onclick="addValueCard()">➕ Agregar Nuevo Valor</button>
        </div>

        <div class="section deletable" style="text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false" style="color: white;">🔄 Mi Evolución Continua</h2>
            <p class="editable" contenteditable="false" style="font-size: 1.2em; font-style: italic; margin-bottom: 20px;">
                "Cada día es una oportunidad para ser una mejor versión de mí mismo,<br>
                construyendo paso a paso la vida extraordinaria que merezco vivir."
            </p>
            <div style="font-size: 1.5em; margin-top: 20px;">
                <span class="editable" contenteditable="false">🌱 → 🌿 → 🌺 → 🌟</span>
            </div>
            <p class="editable" contenteditable="false" style="margin-top: 10px;">
                Intención → Acción → Hábito → Transformación
            </p>
        </div>

        <button class="add-section-btn" onclick="showTemplateSelector()">➕ Agregar Nueva Sección</button>
    </div>

    <script>
        let editMode = false;

        // Toggle modo edición
        function toggleEditMode() {
            editMode = !editMode;
            const editables = document.querySelectorAll('.editable');
            const editBtn = document.querySelector('.edit-btn');
            const saveBtn = document.querySelector('.save-btn');
            
            if (editMode) {
                editables.forEach(el => {
                    el.contentEditable = 'true';
                });
                editBtn.textContent = '❌ Salir de Edición';
                editBtn.style.display = 'block';
                saveBtn.style.display = 'block';
            } else {
                editables.forEach(el => {
                    el.contentEditable = 'false';
                });
                editBtn.textContent = '🔧 Modo Edición';
                saveBtn.style.display = 'none';
            }
        }

        // Guardar cambios
        function saveChanges() {
            const data = extractData();
            localStorage.setItem('dragonDreamData', JSON.stringify(data));
            alert('✅ Cambios guardados exitosamente!');
            toggleEditMode();
        }

        // Extraer datos del DOM
        function extractData() {
            return {
                title: document.querySelector('.title').textContent,
                subtitle: document.querySelector('.subtitle').textContent,
                timestamp: new Date().toISOString()
            };
        }

        // Eliminar sección
        function deleteSection(btn) {
            if (confirm('¿Estás seguro de que quieres eliminar este elemento?')) {
                const section = btn.closest('.deletable');
                section.remove();
            }
        }

        // Mostrar selector de plantillas
        function showTemplateSelector() {
            document.getElementById('templateSelector').style.display = 'block';
        }

        // Cerrar selector de plantillas
        function closeTemplateSelector() {
            document.getElementById('templateSelector').style.display = 'none';
        }

        // Agregar nueva sección
        function addSection(type) {
            const container = document.getElementById('dragon-dream-container');
            const newSection = document.createElement('div');
            newSection.className = 'section deletable';
            
            let content = '';
            
            switch(type) {
                case 'goals':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">🎯 Mis Metas</h2>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                            <div class="deletable" style="padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">🏃 Meta de Salud</h3>
                                <p class="editable" contenteditable="false">Ejercitarme 30 minutos diarios</p>
                                <div class="progress-bar" onclick="adjustProgress(this)">
                                    <div class="progress-fill" style="width: 50%"></div>
                                </div>
                            </div>
                            <div class="deletable" style="padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">💼 Meta Profesional</h3>
                                <p class="editable" contenteditable="false">Aprender una nueva habilidad</p>
                                <div class="progress-bar" onclick="adjustProgress(this)">
                                    <div class="progress-fill" style="width: 30%"></div>
                                </div>
                            </div>
                        </div>
                        <button class="add-section-btn" onclick="addGoalCard(this)">➕ Agregar Nueva Meta</button>
                    `;
                    break;
                    
                case 'habits':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">📋 Mis Hábitos Diarios</h2>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 15px;">
                            <div class="deletable" style="padding: 15px; background: white; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: flex; justify-content: space-between; align-items: center;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <span class="editable" contenteditable="false">🧘 Meditación</span>
                                <div class="habit-tracker">
                                    <div class="day-circle completed" onclick="toggleDay(this)">L</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">M</div>
                                    <div class="day-circle incomplete" onclick="toggleDay(this)">X</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">J</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">V</div>
                                    <div class="day-circle incomplete" onclick="toggleDay(this)">S</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">D</div>
                                </div>
                            </div>
                            <div class="deletable" style="padding: 15px; background: white; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: flex; justify-content: space-between; align-items: center;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <span class="editable" contenteditable="false">💧 Beber agua</span>
                                <div class="habit-tracker">
                                    <div class="day-circle completed" onclick="toggleDay(this)">L</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">M</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">X</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">J</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">V</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">S</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">D</div>
                                </div>
                            </div>
                        </div>
                        <button class="add-section-btn" onclick="addHabitCard(this)">➕ Agregar Nuevo Hábito</button>
                    `;
                    break;
                    
                case 'gratitude':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">🙏 Mi Registro de Gratitud</h2>
                        <div style="background: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                            <h3 style="margin-bottom: 15px;">Hoy estoy agradecido por:</h3>
                            <div>
                                <p class="editable deletable" contenteditable="false" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                    1. Mi salud y bienestar
                                </p>
                                <p class="editable deletable" contenteditable="false" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                    2. Las personas que me apoyan
                                </p>
                                <p class="editable deletable" contenteditable="false" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                    3. Las oportunidades de crecimiento
                                </p>
                            </div>
                            <button class="add-section-btn" onclick="addGratitudeItem(this)">➕ Agregar Item de Gratitud</button>
                        </div>
                    `;
                    break;
                    
                case 'challenges':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">💪 Mis Desafíos Personales</h2>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                            <div class="deletable" style="padding: 20px; background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%); color: white; border-radius: 10px;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">🏃 Desafío Físico</h3>
                                <p class="editable" contenteditable="false">Correr 5km sin parar</p>
                                <small class="editable" contenteditable="false">Fecha límite: Fin de mes</small>
                            </div>
                            <div class="deletable" style="padding: 20px; background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); color: white; border-radius: 10px;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">🧠 Desafío Mental</h3>
                                <p class="editable" contenteditable="false">Leer 2 libros este mes</p>
                                <small class="editable" contenteditable="false">Fecha límite: 30 días</small>
                            </div>
                        </div>
                        <button class="add-section-btn" onclick="addChallengeCard(this)">➕ Agregar Nuevo Desafío</button>
                    `;
                    break;
                    
                case 'custom':
                    const customTitle = prompt('¿Cuál es el título de tu nueva sección?') || 'Mi Nueva Sección';
                    const customContent = prompt('¿Qué contenido quieres incluir?') || 'Contenido personalizado aquí...';
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">✨ ${customTitle}</h2>
                        <div style="padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                            <p class="editable" contenteditable="false">${customContent}</p>
                        </div>
                    `;
                    break;
            }
            
            newSection.innerHTML = content;
            
            // Insertar antes del último botón de agregar sección
            const lastButton = container.querySelector('.add-section-btn:last-child');
            container.insertBefore(newSection, lastButton);
            
            closeTemplateSelector();
        }

        // Funciones específicas para agregar elementos
        function addTimelineItem() {
            const timeline = document.querySelector('.timeline');
            const period = prompt('Período (ej: Mes 13):') || 'Nuevo período';
            const phase = prompt('Fase/Actividad:') || 'Nueva fase';
            
            const newItem = document.createElement('div');
            newItem.className = 'timeline-item deletable';
            newItem.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <div class="timeline-month editable" contenteditable="false">${period}</div>
                <div class="timeline-phase editable" contenteditable="false">${phase}</div>
            `;
            
            timeline.appendChild(newItem);
        }

        function addMetricCard() {
            const metricsContainer = document.querySelector('.metrics');
            const value = prompt('Valor de la métrica:') || '0';
            const label = prompt('Nombre de la métrica:') || 'Nueva Métrica';
            const progress = prompt('Progreso (0-100):') || '50';
            
            const newCard = document.createElement('div');
            newCard.className = 'metric-card deletable';
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <div class="metric-value editable" contenteditable="false">${value}</div>
                <div class="metric-label editable" contenteditable="false">${label}</div>
                <div class="progress-bar" onclick="adjustProgress(this)">
                    <div class="progress-fill" style="width: ${progress}%"></div>
                </div>
            `;
            
            metricsContainer.appendChild(newCard);
        }

        function addMandalaElement() {
            const mandala = document.querySelector('.mandala');
            const icon = prompt('Emoji/Icono:') || '⭐';
            const title = prompt('Nombre del área:') || 'NUEVA ÁREA';
            
            const colors = ['#f093fb', '#4facfe', '#43e97b', '#fa709a', '#38f9d7', '#fee140', '#ff6b6b', '#a8edea'];
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            
            const newElement = document.createElement('div');
            newElement.className = 'mandala-element deletable';
            newElement.style.cssText = `
                position: absolute;
                top: ${Math.random() * 60 + 20}%;
                left: ${Math.random() * 60 + 20}%;
                transform: translate(-50%, -50%);
                background: ${randomColor};
            `;
            newElement.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <span class="editable" contenteditable="false">${icon}<br>${title}</span>
            `;
            
            mandala.appendChild(newElement);
        }

        function addValueCard() {
            const valuesContainer = document.querySelector('[style*="grid-template-columns: repeat(auto-fit, minmax(200px, 1fr))"]');
            const icon = prompt('Emoji/Icono:') || '⭐';
            const title = prompt('Título del valor:') || 'Nuevo Valor';
            const description = prompt('Descripción:') || 'Descripción del valor';
            
            const colors = [
                'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
                'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
                'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
                'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)'
            ];
            
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            
            const newCard = document.createElement('div');
            newCard.className = 'value-card deletable';
            newCard.style.cssText = `padding: 20px; background: ${randomColor}; color: white; border-radius: 10px;`;
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <h3 class="editable" contenteditable="false">${icon} ${title}</h3>
                <p class="editable" contenteditable="false">${description}</p>
            `;
            
            valuesContainer.appendChild(newCard);
        }

        function addGoalCard(btn) {
            const section = btn.closest('.section');
            const container = section.querySelector('[style*="grid-template-columns"]');
            const title = prompt('Título de la meta:') || 'Nueva Meta';
            const description = prompt('Descripción:') || 'Descripción de la meta';
            const progress = prompt('Progreso inicial (0-100):') || '0';
            
            const newCard = document.createElement('div');
            newCard.className = 'deletable';
            newCard.style.cssText = 'padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);';
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <h3 class="editable" contenteditable="false">${title}</h3>
                <p class="editable" contenteditable="false">${description}</p>
                <div class="progress-bar" onclick="adjustProgress(this)">
                    <div class="progress-fill" style="width: ${progress}%"></div>
                </div>
            `;
            
            container.appendChild(newCard);
        }

        function addHabitCard(btn) {
            const section = btn.closest('.section');
            const container = section.querySelector('[style*="grid-template-columns"]');
            const habitName = prompt('Nombre del hábito:') || 'Nuevo Hábito';
            const icon = prompt('Emoji/Icono:') || '⭐';
            
            const newCard = document.createElement('div');
            newCard.className = 'deletable';
            newCard.style.cssText = 'padding: 15px; background: white; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: flex; justify-content: space-between; align-items: center;';
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <span class="editable" contenteditable="false">${icon} ${habitName}</span>
                <div class="habit-tracker">
                    <div class="day-circle incomplete" onclick="toggleDay(this)">L</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">M</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">X</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">J</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">V</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">S</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">D</div>
                </div>
            `;
            
            container.appendChild(newCard);
        }

        function addGratitudeItem(btn) {
            const section = btn.closest('div[style*="background: white"]');
            const container = section.querySelector('div:not([style*="margin-top"])');
            const gratitudeText = prompt('¿Por qué estás agradecido?') || 'Nueva razón de gratitud';
            
            const items = container.querySelectorAll('p').length;
            const newItem = document.createElement('p');
            newItem.className = 'editable deletable';
            newItem.contentEditable = 'false';
            newItem.style.cssText = 'margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;';
            newItem.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                ${items + 1}. ${gratitudeText}
            `;
            
            container.appendChild(newItem);
        }

        function addChallengeCard(btn) {
            const section = btn.closest('.section');
            const container = section.querySelector('[style*="grid-template-columns"]');
            const title = prompt('Título del desafío:') || 'Nuevo Desafío';
            const description = prompt('Descripción:') || 'Descripción del desafío';
            const deadline = prompt('Fecha límite:') || 'Fecha por definir';
            
            const colors = [
                'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)',
                'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',
                'linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)',
                'linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%)'
            ];
            
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            
            const newCard = document.createElement('div');
            newCard.className = 'deletable';
            newCard.style.cssText = `padding: 20px; background: ${randomColor}; color: white; border-radius: 10px;`;
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <h3 class="editable" contenteditable="false">${title}</h3>
                <p class="editable" contenteditable="false">${description}</p>
                <small class="editable" contenteditable="false">Fecha límite: ${deadline}</small>
            `;
            
            container.appendChild(newCard);
        }

        // Ajustar progreso
        function adjustProgress(progressBar) {
            const fill = progressBar.querySelector('.progress-fill');
            const currentWidth = parseInt(fill.style.width) || 0;
            const newWidth = prompt(`Ajustar progreso (0-100):`, currentWidth);
            
            if (newWidth !== null && !isNaN(newWidth) && newWidth >= 0 && newWidth <= 100) {
                fill.style.width = newWidth + '%';
            }
        }

        // Toggle día en hábitos
        function toggleDay(dayElement) {
            if (dayElement.classList.contains('completed')) {
                dayElement.classList.remove('completed');
                dayElement.classList.add('incomplete');
            } else {
                dayElement.classList.remove('incomplete');
                dayElement.classList.add('completed');
            }
        }

        // Mostrar selector de colores
        function showColorPicker() {
            const colorPicker = document.getElementById('colorPicker');
            colorPicker.style.display = colorPicker.style.display === 'block' ? 'none' : 'block';
        }

        // Cambiar color de fondo
        function changeBackgroundColor(color1, color2) {
            document.body.style.background = `linear-gradient(135deg, ${color1} 0%, ${color2} 100%)`;
            document.getElementById('colorPicker').style.display = 'none';
        }

        // Cerrar selectores al hacer clic fuera
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.color-picker') && !e.target.closest('[onclick*="showColorPicker"]')) {
                document.getElementById('colorPicker').style.display = 'none';
            }
            if (!e.target.closest('.template-selector') && !e.target.closest('[onclick*="showTemplateSelector"]')) {
                document.getElementById('templateSelector').style.display = 'none';
            }
        });

        // Cargar datos guardados al iniciar
        document.addEventListener('DOMContentLoaded', function() {
            const savedData = localStorage.getItem('dragonDreamData');
            if (savedData) {
                try {
                    const data = JSON.parse(savedData);
                    if (data.title) document.querySelector('.title').textContent = data.title;
                    if (data.subtitle) document.querySelector('.subtitle').textContent = data.subtitle;
                } catch (error) {
                    console.log('No se pudieron cargar datos guardados');
                }
            }
        });

        // Modal para información detallada
        const modalData = {
            sonar: {
                icon: '💭',
                title: 'SOÑAR - Visualizar Mi Futuro',
                description: 'Esta es la fase donde me conecto con mis sueños más profundos y visualizo la vida que realmente quiero vivir.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🌟 Clarificar mi visión de vida</strong></li>
                        <li><strong>💭 Conectar con mis valores</strong></li>
                        <li><strong>🎨 Visualizar mi yo ideal</strong></li>
                        <li><strong>❤️ Escuchar mi corazón</strong></li>
                    </ul>
                `
            },
            planificar: {
                icon: '📋',
                title: 'PLANIFICAR - Crear Mi Estrategia',
                description: 'Transformo mis sueños en un plan concreto y realizable con metas específicas y rutinas saludables.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🎯 Establecer metas SMART</strong></li>
                        <li><strong>📅 Crear mi rutina ideal</strong></li>
                        <li><strong>💪 Identificar hábitos clave</strong></li>
                        <li><strong>📊 Definir métricas de progreso</strong></li>
                    </ul>
                `
            },
            realizar: {
                icon: '🎯',
                title: 'ACTUAR - Vivir Mi Transformación',
                description: 'La fase de acción donde ejecuto mis hábitos diarios y mantengo la disciplina con adaptabilidad.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🔥 Ejecutar mis hábitos diarios</strong></li>
                        <li><strong>📈 Monitorear mi progreso</strong></li>
                        <li><strong>🔄 Adaptar sobre la marcha</strong></li>
                        <li><strong>💪 Mantener la motivación</strong></li>
                    </ul>
                `
            },
            celebrar: {
                icon: '🎉',
                title: 'CELEBRAR - Reconocer Mi Crecimiento',
                description: 'Celebro logros, integro aprendizajes y preparo el terreno para nuevos ciclos de crecimiento.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🏆 Reconocer mis logros</strong></li>
                        <li><strong>📚 Extraer aprendizajes</strong></li>
                        <li><strong>🙏 Practicar gratitud</strong></li>
                        <li><strong>🔄 Preparar próximos ciclos</strong></li>
                    </ul>
                `
            },
            salud: {
                icon: '💪',
                title: 'SALUD - Mi Base Fundamental',
                description: 'La salud física y mental es la base de todo. Sin energía y bienestar, es difícil perseguir otros sueños.',
                details: `
                    <h3>🎯 Mis objetivos de salud:</h3>
                    <ul>
                        <li><strong>🏃 Actividad física regular</strong></li>
                        <li><strong>🥗 Nutrición consciente</strong></li>
                        <li><strong>😴 Descanso reparador</strong></li>
                        <li><strong>🧘 Salud mental y mindfulness</strong></li>
                    </ul>
                `
            },
            carrera: {
                icon: '🎯',
                title: 'CARRERA - Mi Crecimiento Profesional',
                description: 'Mi carrera es la expresión de mis talentos y mi contribución al mundo.',
                details: `
                    <h3>🎯 Mis objetivos profesionales:</h3>
                    <ul>
                        <li><strong>📈 Desarrollo de habilidades</strong></li>
                        <li><strong>🌟 Excelencia en mi trabajo</strong></li>
                        <li><strong>🤝 Red profesional</strong></li>
                        <li><strong>⚖️ Balance trabajo-vida</strong></li>
                    </ul>
                `
            },
            relaciones: {
                icon: '❤️',
                title: 'RELACIONES - Mis Conexiones Humanas',
                description: 'Las relaciones son el corazón de una vida plena. Cultivo vínculos profundos y significativos.',
                details: `
                    <h3>🎯 Mis objetivos relacionales:</h3>
                    <ul>
                        <li><strong>❤️ Profundizar vínculos existentes</strong></li>
                        <li><strong>🤝 Crear nuevas amistades</strong></li>
                        <li><strong>🗣️ Comunicación auténtica</strong></li>
                        <li><strong>🙏 Gratitud relacional</strong></li>
                    </ul>
                `
            },
            crecimiento: {
                icon: '🌱',
                title: 'CRECIMIENTO - Mi Evolución Personal',
                description: 'El crecimiento personal es un viaje donde desarrollo mi potencial y me convierto en mi mejor versión.',
                details: `
                    <h3>🎯 Áreas de crecimiento:</h3>
                    <ul>
                        <li><strong>🧠 Inteligencia emocional</strong></li>
                        <li><strong>💪 Resiliencia y adaptación</strong></li>
                        <li><strong>🎯 Autodisciplina</strong></li>
                        <li><strong>🧘 Mindfulness y presencia</strong></li>
                    </ul>
                `
            },
            finanzas: {
                icon: '💰',
                title: 'FINANZAS - Mi Libertad Económica',
                description: 'Las finanzas saludables me dan libertad y tranquilidad para perseguir mis sueños.',
                details: `
                    <h3>🎯 Mis objetivos financieros:</h3>
                    <ul>
                        <li><strong>💰 Fondo de emergencia</strong></li>
                        <li><strong>📊 Presupuesto consciente</strong></li>
                        <li><strong>📈 Inversiones inteligentes</strong></li>
                        <li><strong>📚 Educación financiera</strong></li>
                    </ul>
                `
            },
            pasiones: {
                icon: '🎨',
                title: 'PASIONES - Lo Que Me Hace Vibrar',
                description: 'Mis pasiones y hobbies nutren mi alma y me conectan con la alegría pura.',
                details: `
                    <h3>🎯 Mis pasiones actuales:</h3>
                    <ul>
                        <li><strong>🎨 Creatividad y arte</strong></li>
                        <li><strong>📚 Aprendizaje continuo</strong></li>
                        <li><strong>🌍 Viajes y aventuras</strong></li>
                        <li><strong>🎵 Música y expresión</strong></li>
                    </ul>
                `
            }
        };

        // Crear y mostrar modal
        function openModal(type) {
            // Eliminar modal existente si hay uno
            const existingModal = document.getElementById('infoModal');
            if (existingModal) {
                existingModal.remove();
            }

            const data = modalData[type];
            if (!data) return;

            const modal = document.createElement('div');
            modal.id = 'infoModal';
            modal.style.cssText = `
                display: block;
                position: fixed;
                z-index: 2000;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
                backdrop-filter: blur(5px);
            `;

            modal.innerHTML = `
                <div style="
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    margin: 5% auto;
                    padding: 40px;
                    border-radius: 20px;
                    width: 90%;
                    max-width: 600px;
                    color: white;
                    position: relative;
                    animation: modalSlideIn 0.5s ease;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                ">
                    <span onclick="closeModal()" style="
                        position: absolute;
                        top: 20px;
                        right: 30px;
                        color: white;
                        font-size: 40px;
                        font-weight: bold;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    ">&times;</span>
                    
                    <div style="display: flex; align-items: center; margin-bottom: 30px; border-bottom: 2px solid rgba(255, 255, 255, 0.3); padding-bottom: 20px;">
                        <div style="font-size: 3em; margin-right: 20px;">${data.icon}</div>
                        <div style="font-size: 2em; font-weight: bold;">${data.title}</div>
                    </div>
                    
                    <div style="font-size: 1.2em; line-height: 1.6; margin-bottom: 30px;">
                        ${data.description}
                    </div>
                    
                    <div style="background: rgba(255, 255, 255, 0.1); padding: 25px; border-radius: 15px; border-left: 5px solid #fff;">
                        ${data.details}
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // Cerrar al hacer clic fuera
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeModal();
                }
            });
        }

        // Cerrar modal
        function closeModal() {
            const modal = document.getElementById('infoModal');
            if (modal) {
                modal.remove();
            }
        }

        // Toggle modo edición (versión corregida)
        function toggleEditMode() {
            editMode = !editMode;
            const editables = document.querySelectorAll('.editable');
            const editBtn = document.querySelector('.edit-btn');
            const saveBtn = document.querySelector('.save-btn');
            
            if (editMode) {
                editables.forEach(el => {
                    el.contentEditable = 'true';
                    el.style.border = '2px dashed #3498db';
                    el.style.padding = '5px';
                    el.style.background = 'rgba(52, 152, 219, 0.1)';
                });
                editBtn.textContent = '❌ Salir de Edición';
                saveBtn.style.display = 'block';
            } else {
                editables.forEach(el => {
                    el.contentEditable = 'false';
                    el.style.border = 'none';
                    el.style.padding = '';
                    el.style.background = '';
                });
                editBtn.textContent = '🔧 Modo Edición';
                saveBtn.style.display = 'none';
            }
        }

        // Crear y mostrar modal con contenido editable
        function openModal(type) {
            const existingModal = document.getElementById('infoModal');
            if (existingModal) {
                existingModal.remove();
            }

            const data = modalData[type];
            if (!data) return;

            const modal = document.createElement('div');
            modal.id = 'infoModal';
            modal.style.cssText = `
                display: block;
                position: fixed;
                z-index: 2000;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
                backdrop-filter: blur(5px);
            `;

            modal.innerHTML = `
                <div style="
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    margin: 5% auto;
                    padding: 40px;
                    border-radius: 20px;
                    width: 90%;
                    max-width: 600px;
                    color: white;
                    position: relative;
                    animation: modalSlideIn 0.5s ease;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                ">
                    <span onclick="closeModal()" style="
                        position: absolute;
                        top: 20px;
                        right: 30px;
                        color: white;
                        font-size: 40px;
                        font-weight: bold;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    ">&times;</span>
                    
                    <div style="display: flex; align-items: center; margin-bottom: 30px; border-bottom: 2px solid rgba(255, 255, 255, 0.3); padding-bottom: 20px;">
                        <div class="editable modal-icon" contenteditable="false" style="font-size: 3em; margin-right: 20px;">${data.icon}</div>
                        <div class="editable modal-title" contenteditable="false" style="font-size: 2em; font-weight: bold;">${data.title}</div>
                    </div>
                    
                    <div class="editable modal-description" contenteditable="false" style="font-size: 1.2em; line-height: 1.6; margin-bottom: 30px;">
                        ${data.description}
                    </div>
                    
                    <div style="background: rgba(255, 255, 255, 0.1); padding: 25px; border-radius: 15px; border-left: 5px solid #fff;">
                        <div class="editable modal-details" contenteditable="false">
                            ${data.details}
                        </div>
                    </div>
                    
                    <div style="margin-top: 20px; text-align: center;">
                        <button onclick="toggleModalEdit()" id="modalEditBtn" style="
                            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
                            color: white;
                            border: none;
                            padding: 10px 20px;
                            border-radius: 20px;
                            cursor: pointer;
                            font-weight: bold;
                            margin-right: 10px;
                        ">✏️ Editar Contenido</button>
                        
                        <button onclick="saveModalChanges('${type}')" id="modalSaveBtn" style="
                            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
                            color: white;
                            border: none;
                            padding: 10px 20px;
                            border-radius: 20px;
                            cursor: pointer;
                            font-weight: bold;
                            display: none;
                        ">💾 Guardar</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // Cerrar al hacer clic fuera
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeModal();
                }
            });
        }

        // Toggle edición dentro del modal
        function toggleModalEdit() {
            const modalEditables = document.querySelectorAll('#infoModal .editable');
            const editBtn = document.getElementById('modalEditBtn');
            const saveBtn = document.getElementById('modalSaveBtn');
            
            const isEditing = modalEditables[0].contentEditable === 'true';
            
            if (!isEditing) {
                // Activar edición
                modalEditables.forEach(el => {
                    el.contentEditable = 'true';
                    el.style.border = '2px dashed #fff';
                    el.style.padding = '5px';
                    el.style.background = 'rgba(255, 255, 255, 0.1)';
                    el.style.borderRadius = '5px';
                });
                editBtn.textContent = '❌ Cancelar Edición';
                editBtn.style.background = 'linear-gradient(135deg, #e67e22 0%, #d35400 100%)';
                saveBtn.style.display = 'inline-block';
            } else {
                // Cancelar edición
                modalEditables.forEach(el => {
                    el.contentEditable = 'false';
                    el.style.border = 'none';
                    el.style.padding = '';
                    el.style.background = '';
                });
                editBtn.textContent = '✏️ Editar Contenido';
                editBtn.style.background = 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)';
                saveBtn.style.display = 'none';
            }
        }

        // Guardar cambios del modal
        function saveModalChanges(type) {
            const modalIcon = document.querySelector('#infoModal .modal-icon');
            const modalTitle = document.querySelector('#infoModal .modal-title');
            const modalDescription = document.querySelector('#infoModal .modal-description');
            const modalDetails = document.querySelector('#infoModal .modal-details');
            
            // Actualizar datos en memoria
            if (modalData[type]) {
                modalData[type].icon = modalIcon.textContent;
                modalData[type].title = modalTitle.textContent;
                modalData[type].description = modalDescription.textContent;
                modalData[type].details = modalDetails.innerHTML;
            }
            
            // Guardar en localStorage
            localStorage.setItem('modalData_' + type, JSON.stringify(modalData[type]));
            
            // Mostrar confirmación
            const confirmDiv = document.createElement('div');
            confirmDiv.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
                color: white;
                padding: 15px 25px;
                border-radius: 10px;
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
                z-index: 3000;
                font-weight: bold;
                animation: slideInRight 0.5s ease;
            `;
            confirmDiv.innerHTML = '✅ Contenido guardado!';
            document.body.appendChild(confirmDiv);

            setTimeout(() => {
                confirmDiv.remove();
            }, 3000);
            
            // Desactivar modo edición del modal
            toggleModalEdit();
        }

        // Cargar datos personalizados de los modales
        function loadModalData() {
            Object.keys(modalData).forEach(type => {
                const saved = localStorage.getItem('modalData_' + type);
                if (saved) {
                    try {
                        modalData[type] = JSON.parse(saved);
                    } catch (e) {
                        console.log('Error cargando datos del modal:', type);
                    }
                }
            });
        }

        // Eventos para abrir modales
        document.addEventListener('DOMContentLoaded', function() {
            // Cargar datos personalizados
            loadModalData();
            
            // Función para manejar clics en elementos con modal
            function handleElementClick(element, modalType) {
                if (element) {
                    element.addEventListener('click', function(e) {
                        // Solo abrir modal si no estamos editando un elemento específico
                        if (!e.target.closest('.editable[contenteditable="true"]')) {
                            openModal(modalType);
                        }
                    });
                }
            }

            // Fases del círculo
            handleElementClick(document.querySelector('.sonar'), 'sonar');
            handleElementClick(document.querySelector('.planificar'), 'planificar');
            handleElementClick(document.querySelector('.realizar'), 'realizar');
            handleElementClick(document.querySelector('.celebrar'), 'celebrar');
            
            // Elementos del mandala
            handleElementClick(document.querySelector('.salud'), 'salud');
            handleElementClick(document.querySelector('.carrera'), 'carrera');
            handleElementClick(document.querySelector('.relaciones'), 'relaciones');
            handleElementClick(document.querySelector('.crecimiento'), 'crecimiento');
            handleElementClick(document.querySelector('.finanzas'), 'finanzas');
            handleElementClick(document.querySelector('.pasiones'), 'pasiones');
        });

        // Animación adicional
        const additionalStyle = document.createElement('style');
        additionalStyle.textContent = `
            @keyframes slideInRight {
                from {
                    opacity: 0;
                    transform: translateX(100px);
                }
                to {
                    opacity: 1;
                    transform: translateX(0);
                }
            }
        `;

        // Agregar estilos para la animación del modal
        const style = document.createElement('style');
        style.textContent = `
            @keyframes modalSlideIn {
                from {
                    opacity: 0;
                    transform: translateY(-50px) scale(0.8);
                }
                to {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html><!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mi Dragon Dream Personal - Editable</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .edit-mode {
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1000;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .edit-btn, .save-btn, .add-btn {
            padding: 12px 20px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .edit-btn {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            color: white;
        }

        .save-btn {
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
            color: white;
        }

        .add-btn {
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
            color: white;
        }

        .edit-btn:hover, .save-btn:hover, .add-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px;
            backdrop-filter: blur(10px);
        }

        .editable {
            position: relative;
            cursor: text;
            transition: all 0.3s ease;
        }

        .editable:hover::after {
            content: '✏️';
            position: absolute;
            top: -10px;
            right: -10px;
            background: #3498db;
            color: white;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            opacity: 0.8;
            z-index: 10;
        }

        .editable[contenteditable="true"] {
            border: 2px dashed #3498db;
            padding: 5px;
            border-radius: 5px;
            background: rgba(52, 152, 219, 0.1);
        }

        .deletable {
            position: relative;
        }

        .deletable:hover .delete-btn {
            display: block;
        }

        .delete-btn {
            display: none;
            position: absolute;
            top: -10px;
            right: -10px;
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            cursor: pointer;
            font-size: 12px;
            z-index: 100;
        }

        .color-picker {
            position: fixed;
            top: 200px;
            left: 20px;
            z-index: 1000;
            background: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            display: none;
        }

        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin: 5px;
            cursor: pointer;
            display: inline-block;
            border: 2px solid transparent;
        }

        .color-option:hover {
            border-color: #333;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .title {
            font-size: 2.5em;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .subtitle {
            font-size: 1.2em;
            color: #7f8c8d;
            font-style: italic;
        }

        .dragon-circle {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 40px 0;
            position: relative;
            height: 400px;
        }

        .circle-container {
            position: relative;
            width: 350px;
            height: 350px;
            border: 4px solid #3498db;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(52, 152, 219, 0.1) 0%, transparent 70%);
        }

        .phase {
            position: absolute;
            width: 120px;
            height: 120px;
            border-radius: 50%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            color: white;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        .phase:hover {
            transform: scale(1.1);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
        }

        .phase-icon {
            font-size: 2em;
            margin-bottom: 5px;
        }

        .phase-text {
            font-size: 0.9em;
            font-weight: bold;
        }

        .sonar {
            top: -60px;
            left: 115px;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }

        .planificar {
            top: 115px;
            right: -60px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        .realizar {
            bottom: -60px;
            left: 115px;
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }

        .celebrar {
            top: 115px;
            left: -60px;
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        }

        .center-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            color: #2c3e50;
            font-weight: bold;
            font-size: 1.1em;
            cursor: pointer;
        }

        .arrows {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px;
            height: 300px;
        }

        .arrow {
            position: absolute;
            width: 0;
            height: 0;
            border-style: solid;
        }

        .arrow-1 {
            top: 30px;
            right: 120px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(45deg);
        }

        .arrow-2 {
            top: 120px;
            right: 30px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(135deg);
        }

        .arrow-3 {
            bottom: 30px;
            right: 120px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(225deg);
        }

        .arrow-4 {
            top: 120px;
            left: 30px;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-bottom: 20px solid #3498db;
            transform: rotate(315deg);
        }

        .section {
            margin: 40px 0;
            padding: 30px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 15px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

        .section-title {
            font-size: 1.8em;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
            font-weight: bold;
        }

        .timeline {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 30px 0;
            padding: 20px;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            border-radius: 10px;
            color: white;
        }

        .timeline-item {
            text-align: center;
            flex: 1;
            padding: 10px;
            position: relative;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 10px;
        }

        .timeline-item:hover {
            transform: scale(1.05);
            background: rgba(255, 255, 255, 0.2);
        }

        .timeline-item:not(:last-child)::after {
            content: '→';
            position: absolute;
            right: -15px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 1.5em;
            color: white;
        }

        .timeline-month, .timeline-phase {
            font-weight: bold;
            font-size: 1.1em;
            margin-bottom: 5px;
        }

        .timeline-phase {
            font-size: 0.9em;
            opacity: 0.9;
        }

        .metrics {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .metric-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .metric-card:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
        }

        .metric-value {
            font-size: 2em;
            font-weight: bold;
            color: #3498db;
            margin-bottom: 10px;
        }

        .metric-label {
            color: #7f8c8d;
            font-size: 0.9em;
        }

        .progress-bar {
            width: 100%;
            height: 20px;
            background: #ecf0f1;
            border-radius: 10px;
            margin: 10px 0;
            overflow: hidden;
            cursor: pointer;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #43e97b 0%, #38f9d7 100%);
            border-radius: 10px;
            transition: width 0.5s ease;
        }

        .mandala {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 40px 0;
            position: relative;
            height: 300px;
        }

        .mandala-center {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-weight: bold;
            text-align: center;
            font-size: 1.1em;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .mandala-center:hover {
            transform: scale(1.05);
        }

        .mandala-element {
            position: absolute;
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-weight: bold;
            font-size: 0.8em;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .mandala-element:hover {
            transform: scale(1.2);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4);
        }

        .salud { top: 0; left: 50%; transform: translateX(-50%); background: #f093fb; }
        .carrera { top: 50%; right: 0; transform: translateY(-50%); background: #4facfe; }
        .relaciones { bottom: 0; left: 50%; transform: translateX(-50%); background: #43e97b; }
        .crecimiento { top: 50%; left: 0; transform: translateY(-50%); background: #fa709a; }
        .finanzas { top: 20%; left: 20%; background: #38f9d7; }
        .pasiones { top: 20%; right: 20%; background: #fee140; }

        .value-card {
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .value-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .value-card:hover::before {
            left: 100%;
        }

        .value-card:hover {
            transform: scale(1.05);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }

        .add-section-btn {
            width: 100%;
            padding: 20px;
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
            color: white;
            border: 2px dashed white;
            border-radius: 15px;
            cursor: pointer;
            font-size: 1.2em;
            font-weight: bold;
            transition: all 0.3s ease;
            margin: 20px 0;
        }

        .add-section-btn:hover {
            transform: scale(1.02);
            box-shadow: 0 8px 16px rgba(52, 152, 219, 0.4);
        }

        .template-selector {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            z-index: 2000;
            display: none;
            max-width: 500px;
            width: 90%;
        }

        .template-option {
            padding: 15px;
            border: 2px solid #ecf0f1;
            border-radius: 10px;
            margin: 10px 0;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .template-option:hover {
            border-color: #3498db;
            background: rgba(52, 152, 219, 0.1);
        }

        .habit-tracker {
            display: flex;
            gap: 5px;
            align-items: center;
        }

        .day-circle {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .day-circle.completed {
            background: #2ecc71;
            color: white;
        }

        .day-circle.incomplete {
            background: #ecf0f1;
            color: #7f8c8d;
        }

        .day-circle:hover {
            transform: scale(1.1);
        }

        @media (max-width: 768px) {
            .container { padding: 20px; }
            .title { font-size: 2em; }
            .dragon-circle { height: 300px; }
            .circle-container { width: 280px; height: 280px; }
            .phase { width: 90px; height: 90px; font-size: 0.8em; }
            .timeline { flex-direction: column; gap: 10px; }
            .timeline-item::after { display: none; }
            .edit-mode { position: relative; top: 0; left: 0; margin-bottom: 20px; }
        }
    </style>
</head>
<body>
    <!-- Panel de Edición -->
    <div class="edit-mode">
        <button class="edit-btn" onclick="toggleEditMode()">🔧 Modo Edición</button>
        <button class="save-btn" onclick="saveChanges()" style="display: none;">💾 Guardar</button>
        <button class="add-btn" onclick="showTemplateSelector()">➕ Agregar Sección</button>
        <button class="edit-btn" onclick="showColorPicker()">🎨 Cambiar Colores</button>
    </div>

    <!-- Selector de Colores -->
    <div class="color-picker" id="colorPicker">
        <h4>Cambiar Color de Fondo:</h4>
        <div class="color-option" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);" onclick="changeBackgroundColor('#667eea', '#764ba2')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);" onclick="changeBackgroundColor('#ff9a9e', '#fecfef')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);" onclick="changeBackgroundColor('#a8edea', '#fed6e3')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);" onclick="changeBackgroundColor('#ffecd2', '#fcb69f')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%);" onclick="changeBackgroundColor('#a18cd1', '#fbc2eb')"></div>
        <div class="color-option" style="background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 100%);" onclick="changeBackgroundColor('#ff6b6b', '#4ecdc4')"></div>
    </div>

    <!-- Selector de Plantillas -->
    <div class="template-selector" id="templateSelector">
        <h3>Agregar Nueva Sección</h3>
        <div class="template-option" onclick="addSection('goals')">
            <strong>🎯 Mis Metas</strong><br>
            <small>Sección para definir objetivos específicos</small>
        </div>
        <div class="template-option" onclick="addSection('habits')">
            <strong>📋 Mis Hábitos</strong><br>
            <small>Tracker de hábitos diarios</small>
        </div>
        <div class="template-option" onclick="addSection('gratitude')">
            <strong>🙏 Gratitud</strong><br>
            <small>Registro de cosas por las que estoy agradecido</small>
        </div>
        <div class="template-option" onclick="addSection('challenges')">
            <strong>💪 Desafíos</strong><br>
            <small>Retos personales para crecer</small>
        </div>
        <div class="template-option" onclick="addSection('custom')">
            <strong>✨ Sección Personalizada</strong><br>
            <small>Crear desde cero</small>
        </div>
        <button onclick="closeTemplateSelector()" style="margin-top: 15px; padding: 10px 20px; background: #e74c3c; color: white; border: none; border-radius: 5px; cursor: pointer;">Cancelar</button>
    </div>

    <div class="container" id="dragon-dream-container">
        <div class="header">
            <h1 class="title editable" contenteditable="false">🐉 Mi Dragon Dream Personal</h1>
            <p class="subtitle editable" contenteditable="false">Transformación y Crecimiento Personal</p>
        </div>

        <div class="dragon-circle deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <div class="circle-container">
                <div class="arrows">
                    <div class="arrow arrow-1"></div>
                    <div class="arrow arrow-2"></div>
                    <div class="arrow arrow-3"></div>
                    <div class="arrow arrow-4"></div>
                </div>
                
                <div class="phase sonar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">💭</div>
                    <div class="phase-text editable" contenteditable="false">SOÑAR</div>
                </div>
                
                <div class="phase planificar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">📋</div>
                    <div class="phase-text editable" contenteditable="false">PLANIFICAR</div>
                </div>
                
                <div class="phase realizar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">🎯</div>
                    <div class="phase-text editable" contenteditable="false">ACTUAR</div>
                </div>
                
                <div class="phase celebrar deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="phase-icon editable" contenteditable="false">🎉</div>
                    <div class="phase-text editable" contenteditable="false">CELEBRAR</div>
                </div>
                
                <div class="center-text editable" contenteditable="false">
                    <strong>MI VIDA<br>EN EQUILIBRIO</strong>
                </div>
            </div>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">🌟 Mi Visión Personal</h2>
            <p class="editable" contenteditable="false" style="text-align: center; font-size: 1.1em; color: #2c3e50; line-height: 1.6;">
                "Vivir una vida plena y auténtica, donde cada día me acerque más a mi mejor versión, 
                manteniendo equilibrio entre mis relaciones, salud, carrera y crecimiento personal, 
                mientras contribuyo positivamente al mundo que me rodea."
            </p>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">📅 Mi Cronograma de Transformación</h2>
            <div class="timeline">
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 1-3</div>
                    <div class="timeline-phase editable" contenteditable="false">Autoconocimiento</div>
                </div>
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 4-6</div>
                    <div class="timeline-phase editable" contenteditable="false">Construcción de Hábitos</div>
                </div>
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 7-9</div>
                    <div class="timeline-phase editable" contenteditable="false">Acción Sostenida</div>
                </div>
                <div class="timeline-item deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="timeline-month editable" contenteditable="false">Meses 10-12</div>
                    <div class="timeline-phase editable" contenteditable="false">Integración y Expansión</div>
                </div>
            </div>
            <button class="add-section-btn" onclick="addTimelineItem()">➕ Agregar Fase</button>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">📊 Mis Indicadores de Progreso</h2>
            <div class="metrics">
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">85%</div>
                    <div class="metric-label editable" contenteditable="false">Bienestar General</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 85%"></div>
                    </div>
                </div>
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">7/10</div>
                    <div class="metric-label editable" contenteditable="false">Metas Cumplidas</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 70%"></div>
                    </div>
                </div>
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">12</div>
                    <div class="metric-label editable" contenteditable="false">Hábitos Positivos</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 90%"></div>
                    </div>
                </div>
                <div class="metric-card deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <div class="metric-value editable" contenteditable="false">8/10</div>
                    <div class="metric-label editable" contenteditable="false">Nivel de Energía</div>
                    <div class="progress-bar" onclick="adjustProgress(this)">
                        <div class="progress-fill" style="width: 80%"></div>
                    </div>
                </div>
            </div>
            <button class="add-section-btn" onclick="addMetricCard()">➕ Agregar Nueva Métrica</button>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">🌸 Mandala de Mi Vida</h2>
            <div class="mandala">
                <div class="mandala-center editable" contenteditable="false">
                    VIDA<br>EQUILIBRADA
                </div>
                <div class="mandala-element salud deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">💪<br>SALUD</span>
                </div>
                <div class="mandala-element carrera deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">🎯<br>CARRERA</span>
                </div>
                <div class="mandala-element relaciones deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">❤️<br>RELACIONES</span>
                </div>
                <div class="mandala-element crecimiento deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">🌱<br>CRECIMIENTO</span>
                </div>
                <div class="mandala-element finanzas deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">💰<br>FINANZAS</span>
                </div>
                <div class="mandala-element pasiones deletable">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <span class="editable" contenteditable="false">🎨<br>PASIONES</span>
                </div>
            </div>
            <button class="add-section-btn" onclick="addMandalaElement()">➕ Agregar Área de Vida</button>
        </div>

        <div class="section deletable">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false">🎯 Mis Valores Personales</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; text-align: center;">
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🦋 Autenticidad</h3>
                    <p class="editable" contenteditable="false">Ser fiel a mí mismo</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🌱 Crecimiento</h3>
                    <p class="editable" contenteditable="false">Mejora continua</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🤝 Conexión</h3>
                    <p class="editable" contenteditable="false">Relaciones significativas</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #fa709a 0%, #fee140 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">⚖️ Equilibrio</h3>
                    <p class="editable" contenteditable="false">Armonía en todas las áreas</p>
                </div>
                <div class="value-card deletable" style="padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 10px;">
                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                    <h3 class="editable" contenteditable="false">🌍 Contribución</h3>
                    <p class="editable" contenteditable="false">Impacto positivo</p>
                </div>
            </div>
            <button class="add-section-btn" onclick="addValueCard()">➕ Agregar Nuevo Valor</button>
        </div>

        <div class="section deletable" style="text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;">
            <button class="delete-btn" onclick="deleteSection(this)">×</button>
            <h2 class="section-title editable" contenteditable="false" style="color: white;">🔄 Mi Evolución Continua</h2>
            <p class="editable" contenteditable="false" style="font-size: 1.2em; font-style: italic; margin-bottom: 20px;">
                "Cada día es una oportunidad para ser una mejor versión de mí mismo,<br>
                construyendo paso a paso la vida extraordinaria que merezco vivir."
            </p>
            <div style="font-size: 1.5em; margin-top: 20px;">
                <span class="editable" contenteditable="false">🌱 → 🌿 → 🌺 → 🌟</span>
            </div>
            <p class="editable" contenteditable="false" style="margin-top: 10px;">
                Intención → Acción → Hábito → Transformación
            </p>
        </div>

        <button class="add-section-btn" onclick="showTemplateSelector()">➕ Agregar Nueva Sección</button>
    </div>

    <script>
        let editMode = false;

        // Toggle modo edición
        function toggleEditMode() {
            editMode = !editMode;
            const editables = document.querySelectorAll('.editable');
            const editBtn = document.querySelector('.edit-btn');
            const saveBtn = document.querySelector('.save-btn');
            
            if (editMode) {
                editables.forEach(el => {
                    el.contentEditable = 'true';
                });
                editBtn.textContent = '❌ Salir de Edición';
                editBtn.style.display = 'block';
                saveBtn.style.display = 'block';
            } else {
                editables.forEach(el => {
                    el.contentEditable = 'false';
                });
                editBtn.textContent = '🔧 Modo Edición';
                saveBtn.style.display = 'none';
            }
        }

        // Guardar cambios
        function saveChanges() {
            const data = extractData();
            localStorage.setItem('dragonDreamData', JSON.stringify(data));
            alert('✅ Cambios guardados exitosamente!');
            toggleEditMode();
        }

        // Extraer datos del DOM
        function extractData() {
            return {
                title: document.querySelector('.title').textContent,
                subtitle: document.querySelector('.subtitle').textContent,
                timestamp: new Date().toISOString()
            };
        }

        // Eliminar sección
        function deleteSection(btn) {
            if (confirm('¿Estás seguro de que quieres eliminar este elemento?')) {
                const section = btn.closest('.deletable');
                section.remove();
            }
        }

        // Mostrar selector de plantillas
        function showTemplateSelector() {
            document.getElementById('templateSelector').style.display = 'block';
        }

        // Cerrar selector de plantillas
        function closeTemplateSelector() {
            document.getElementById('templateSelector').style.display = 'none';
        }

        // Agregar nueva sección
        function addSection(type) {
            const container = document.getElementById('dragon-dream-container');
            const newSection = document.createElement('div');
            newSection.className = 'section deletable';
            
            let content = '';
            
            switch(type) {
                case 'goals':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">🎯 Mis Metas</h2>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                            <div class="deletable" style="padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">🏃 Meta de Salud</h3>
                                <p class="editable" contenteditable="false">Ejercitarme 30 minutos diarios</p>
                                <div class="progress-bar" onclick="adjustProgress(this)">
                                    <div class="progress-fill" style="width: 50%"></div>
                                </div>
                            </div>
                            <div class="deletable" style="padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">💼 Meta Profesional</h3>
                                <p class="editable" contenteditable="false">Aprender una nueva habilidad</p>
                                <div class="progress-bar" onclick="adjustProgress(this)">
                                    <div class="progress-fill" style="width: 30%"></div>
                                </div>
                            </div>
                        </div>
                        <button class="add-section-btn" onclick="addGoalCard(this)">➕ Agregar Nueva Meta</button>
                    `;
                    break;
                    
                case 'habits':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">📋 Mis Hábitos Diarios</h2>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 15px;">
                            <div class="deletable" style="padding: 15px; background: white; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: flex; justify-content: space-between; align-items: center;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <span class="editable" contenteditable="false">🧘 Meditación</span>
                                <div class="habit-tracker">
                                    <div class="day-circle completed" onclick="toggleDay(this)">L</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">M</div>
                                    <div class="day-circle incomplete" onclick="toggleDay(this)">X</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">J</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">V</div>
                                    <div class="day-circle incomplete" onclick="toggleDay(this)">S</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">D</div>
                                </div>
                            </div>
                            <div class="deletable" style="padding: 15px; background: white; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: flex; justify-content: space-between; align-items: center;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <span class="editable" contenteditable="false">💧 Beber agua</span>
                                <div class="habit-tracker">
                                    <div class="day-circle completed" onclick="toggleDay(this)">L</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">M</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">X</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">J</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">V</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">S</div>
                                    <div class="day-circle completed" onclick="toggleDay(this)">D</div>
                                </div>
                            </div>
                        </div>
                        <button class="add-section-btn" onclick="addHabitCard(this)">➕ Agregar Nuevo Hábito</button>
                    `;
                    break;
                    
                case 'gratitude':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">🙏 Mi Registro de Gratitud</h2>
                        <div style="background: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                            <h3 style="margin-bottom: 15px;">Hoy estoy agradecido por:</h3>
                            <div>
                                <p class="editable deletable" contenteditable="false" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                    1. Mi salud y bienestar
                                </p>
                                <p class="editable deletable" contenteditable="false" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                    2. Las personas que me apoyan
                                </p>
                                <p class="editable deletable" contenteditable="false" style="margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;">
                                    <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                    3. Las oportunidades de crecimiento
                                </p>
                            </div>
                            <button class="add-section-btn" onclick="addGratitudeItem(this)">➕ Agregar Item de Gratitud</button>
                        </div>
                    `;
                    break;
                    
                case 'challenges':
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">💪 Mis Desafíos Personales</h2>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                            <div class="deletable" style="padding: 20px; background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%); color: white; border-radius: 10px;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">🏃 Desafío Físico</h3>
                                <p class="editable" contenteditable="false">Correr 5km sin parar</p>
                                <small class="editable" contenteditable="false">Fecha límite: Fin de mes</small>
                            </div>
                            <div class="deletable" style="padding: 20px; background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); color: white; border-radius: 10px;">
                                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                                <h3 class="editable" contenteditable="false">🧠 Desafío Mental</h3>
                                <p class="editable" contenteditable="false">Leer 2 libros este mes</p>
                                <small class="editable" contenteditable="false">Fecha límite: 30 días</small>
                            </div>
                        </div>
                        <button class="add-section-btn" onclick="addChallengeCard(this)">➕ Agregar Nuevo Desafío</button>
                    `;
                    break;
                    
                case 'custom':
                    const customTitle = prompt('¿Cuál es el título de tu nueva sección?') || 'Mi Nueva Sección';
                    const customContent = prompt('¿Qué contenido quieres incluir?') || 'Contenido personalizado aquí...';
                    content = `
                        <button class="delete-btn" onclick="deleteSection(this)">×</button>
                        <h2 class="section-title editable" contenteditable="false">✨ ${customTitle}</h2>
                        <div style="padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                            <p class="editable" contenteditable="false">${customContent}</p>
                        </div>
                    `;
                    break;
            }
            
            newSection.innerHTML = content;
            
            // Insertar antes del último botón de agregar sección
            const lastButton = container.querySelector('.add-section-btn:last-child');
            container.insertBefore(newSection, lastButton);
            
            closeTemplateSelector();
        }

        // Funciones específicas para agregar elementos
        function addTimelineItem() {
            const timeline = document.querySelector('.timeline');
            const period = prompt('Período (ej: Mes 13):') || 'Nuevo período';
            const phase = prompt('Fase/Actividad:') || 'Nueva fase';
            
            const newItem = document.createElement('div');
            newItem.className = 'timeline-item deletable';
            newItem.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <div class="timeline-month editable" contenteditable="false">${period}</div>
                <div class="timeline-phase editable" contenteditable="false">${phase}</div>
            `;
            
            timeline.appendChild(newItem);
        }

        function addMetricCard() {
            const metricsContainer = document.querySelector('.metrics');
            const value = prompt('Valor de la métrica:') || '0';
            const label = prompt('Nombre de la métrica:') || 'Nueva Métrica';
            const progress = prompt('Progreso (0-100):') || '50';
            
            const newCard = document.createElement('div');
            newCard.className = 'metric-card deletable';
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <div class="metric-value editable" contenteditable="false">${value}</div>
                <div class="metric-label editable" contenteditable="false">${label}</div>
                <div class="progress-bar" onclick="adjustProgress(this)">
                    <div class="progress-fill" style="width: ${progress}%"></div>
                </div>
            `;
            
            metricsContainer.appendChild(newCard);
        }

        function addMandalaElement() {
            const mandala = document.querySelector('.mandala');
            const icon = prompt('Emoji/Icono:') || '⭐';
            const title = prompt('Nombre del área:') || 'NUEVA ÁREA';
            
            const colors = ['#f093fb', '#4facfe', '#43e97b', '#fa709a', '#38f9d7', '#fee140', '#ff6b6b', '#a8edea'];
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            
            const newElement = document.createElement('div');
            newElement.className = 'mandala-element deletable';
            newElement.style.cssText = `
                position: absolute;
                top: ${Math.random() * 60 + 20}%;
                left: ${Math.random() * 60 + 20}%;
                transform: translate(-50%, -50%);
                background: ${randomColor};
            `;
            newElement.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <span class="editable" contenteditable="false">${icon}<br>${title}</span>
            `;
            
            mandala.appendChild(newElement);
        }

        function addValueCard() {
            const valuesContainer = document.querySelector('[style*="grid-template-columns: repeat(auto-fit, minmax(200px, 1fr))"]');
            const icon = prompt('Emoji/Icono:') || '⭐';
            const title = prompt('Título del valor:') || 'Nuevo Valor';
            const description = prompt('Descripción:') || 'Descripción del valor';
            
            const colors = [
                'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
                'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
                'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
                'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)'
            ];
            
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            
            const newCard = document.createElement('div');
            newCard.className = 'value-card deletable';
            newCard.style.cssText = `padding: 20px; background: ${randomColor}; color: white; border-radius: 10px;`;
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <h3 class="editable" contenteditable="false">${icon} ${title}</h3>
                <p class="editable" contenteditable="false">${description}</p>
            `;
            
            valuesContainer.appendChild(newCard);
        }

        function addGoalCard(btn) {
            const section = btn.closest('.section');
            const container = section.querySelector('[style*="grid-template-columns"]');
            const title = prompt('Título de la meta:') || 'Nueva Meta';
            const description = prompt('Descripción:') || 'Descripción de la meta';
            const progress = prompt('Progreso inicial (0-100):') || '0';
            
            const newCard = document.createElement('div');
            newCard.className = 'deletable';
            newCard.style.cssText = 'padding: 20px; background: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);';
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <h3 class="editable" contenteditable="false">${title}</h3>
                <p class="editable" contenteditable="false">${description}</p>
                <div class="progress-bar" onclick="adjustProgress(this)">
                    <div class="progress-fill" style="width: ${progress}%"></div>
                </div>
            `;
            
            container.appendChild(newCard);
        }

        function addHabitCard(btn) {
            const section = btn.closest('.section');
            const container = section.querySelector('[style*="grid-template-columns"]');
            const habitName = prompt('Nombre del hábito:') || 'Nuevo Hábito';
            const icon = prompt('Emoji/Icono:') || '⭐';
            
            const newCard = document.createElement('div');
            newCard.className = 'deletable';
            newCard.style.cssText = 'padding: 15px; background: white; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: flex; justify-content: space-between; align-items: center;';
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <span class="editable" contenteditable="false">${icon} ${habitName}</span>
                <div class="habit-tracker">
                    <div class="day-circle incomplete" onclick="toggleDay(this)">L</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">M</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">X</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">J</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">V</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">S</div>
                    <div class="day-circle incomplete" onclick="toggleDay(this)">D</div>
                </div>
            `;
            
            container.appendChild(newCard);
        }

        function addGratitudeItem(btn) {
            const section = btn.closest('div[style*="background: white"]');
            const container = section.querySelector('div:not([style*="margin-top"])');
            const gratitudeText = prompt('¿Por qué estás agradecido?') || 'Nueva razón de gratitud';
            
            const items = container.querySelectorAll('p').length;
            const newItem = document.createElement('p');
            newItem.className = 'editable deletable';
            newItem.contentEditable = 'false';
            newItem.style.cssText = 'margin: 10px 0; padding: 10px; background: #f8f9fa; border-radius: 5px;';
            newItem.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                ${items + 1}. ${gratitudeText}
            `;
            
            container.appendChild(newItem);
        }

        function addChallengeCard(btn) {
            const section = btn.closest('.section');
            const container = section.querySelector('[style*="grid-template-columns"]');
            const title = prompt('Título del desafío:') || 'Nuevo Desafío';
            const description = prompt('Descripción:') || 'Descripción del desafío';
            const deadline = prompt('Fecha límite:') || 'Fecha por definir';
            
            const colors = [
                'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)',
                'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',
                'linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)',
                'linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%)'
            ];
            
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            
            const newCard = document.createElement('div');
            newCard.className = 'deletable';
            newCard.style.cssText = `padding: 20px; background: ${randomColor}; color: white; border-radius: 10px;`;
            newCard.innerHTML = `
                <button class="delete-btn" onclick="deleteSection(this)">×</button>
                <h3 class="editable" contenteditable="false">${title}</h3>
                <p class="editable" contenteditable="false">${description}</p>
                <small class="editable" contenteditable="false">Fecha límite: ${deadline}</small>
            `;
            
            container.appendChild(newCard);
        }

        // Ajustar progreso
        function adjustProgress(progressBar) {
            const fill = progressBar.querySelector('.progress-fill');
            const currentWidth = parseInt(fill.style.width) || 0;
            const newWidth = prompt(`Ajustar progreso (0-100):`, currentWidth);
            
            if (newWidth !== null && !isNaN(newWidth) && newWidth >= 0 && newWidth <= 100) {
                fill.style.width = newWidth + '%';
            }
        }

        // Toggle día en hábitos
        function toggleDay(dayElement) {
            if (dayElement.classList.contains('completed')) {
                dayElement.classList.remove('completed');
                dayElement.classList.add('incomplete');
            } else {
                dayElement.classList.remove('incomplete');
                dayElement.classList.add('completed');
            }
        }

        // Mostrar selector de colores
        function showColorPicker() {
            const colorPicker = document.getElementById('colorPicker');
            colorPicker.style.display = colorPicker.style.display === 'block' ? 'none' : 'block';
        }

        // Cambiar color de fondo
        function changeBackgroundColor(color1, color2) {
            document.body.style.background = `linear-gradient(135deg, ${color1} 0%, ${color2} 100%)`;
            document.getElementById('colorPicker').style.display = 'none';
        }

        // Cerrar selectores al hacer clic fuera
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.color-picker') && !e.target.closest('[onclick*="showColorPicker"]')) {
                document.getElementById('colorPicker').style.display = 'none';
            }
            if (!e.target.closest('.template-selector') && !e.target.closest('[onclick*="showTemplateSelector"]')) {
                document.getElementById('templateSelector').style.display = 'none';
            }
        });

        // Cargar datos guardados al iniciar
        document.addEventListener('DOMContentLoaded', function() {
            const savedData = localStorage.getItem('dragonDreamData');
            if (savedData) {
                try {
                    const data = JSON.parse(savedData);
                    if (data.title) document.querySelector('.title').textContent = data.title;
                    if (data.subtitle) document.querySelector('.subtitle').textContent = data.subtitle;
                } catch (error) {
                    console.log('No se pudieron cargar datos guardados');
                }
            }
        });

        // Modal para información detallada
        const modalData = {
            sonar: {
                icon: '💭',
                title: 'SOÑAR - Visualizar Mi Futuro',
                description: 'Esta es la fase donde me conecto con mis sueños más profundos y visualizo la vida que realmente quiero vivir.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🌟 Clarificar mi visión de vida</strong></li>
                        <li><strong>💭 Conectar con mis valores</strong></li>
                        <li><strong>🎨 Visualizar mi yo ideal</strong></li>
                        <li><strong>❤️ Escuchar mi corazón</strong></li>
                    </ul>
                `
            },
            planificar: {
                icon: '📋',
                title: 'PLANIFICAR - Crear Mi Estrategia',
                description: 'Transformo mis sueños en un plan concreto y realizable con metas específicas y rutinas saludables.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🎯 Establecer metas SMART</strong></li>
                        <li><strong>📅 Crear mi rutina ideal</strong></li>
                        <li><strong>💪 Identificar hábitos clave</strong></li>
                        <li><strong>📊 Definir métricas de progreso</strong></li>
                    </ul>
                `
            },
            realizar: {
                icon: '🎯',
                title: 'ACTUAR - Vivir Mi Transformación',
                description: 'La fase de acción donde ejecuto mis hábitos diarios y mantengo la disciplina con adaptabilidad.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🔥 Ejecutar mis hábitos diarios</strong></li>
                        <li><strong>📈 Monitorear mi progreso</strong></li>
                        <li><strong>🔄 Adaptar sobre la marcha</strong></li>
                        <li><strong>💪 Mantener la motivación</strong></li>
                    </ul>
                `
            },
            celebrar: {
                icon: '🎉',
                title: 'CELEBRAR - Reconocer Mi Crecimiento',
                description: 'Celebro logros, integro aprendizajes y preparo el terreno para nuevos ciclos de crecimiento.',
                details: `
                    <h3>🎯 En esta fase me enfoco en:</h3>
                    <ul>
                        <li><strong>🏆 Reconocer mis logros</strong></li>
                        <li><strong>📚 Extraer aprendizajes</strong></li>
                        <li><strong>🙏 Practicar gratitud</strong></li>
                        <li><strong>🔄 Preparar próximos ciclos</strong></li>
                    </ul>
                `
            },
            salud: {
                icon: '💪',
                title: 'SALUD - Mi Base Fundamental',
                description: 'La salud física y mental es la base de todo. Sin energía y bienestar, es difícil perseguir otros sueños.',
                details: `
                    <h3>🎯 Mis objetivos de salud:</h3>
                    <ul>
                        <li><strong>🏃 Actividad física regular</strong></li>
                        <li><strong>🥗 Nutrición consciente</strong></li>
                        <li><strong>😴 Descanso reparador</strong></li>
                        <li><strong>🧘 Salud mental y mindfulness</strong></li>
                    </ul>
                `
            },
            carrera: {
                icon: '🎯',
                title: 'CARRERA - Mi Crecimiento Profesional',
                description: 'Mi carrera es la expresión de mis talentos y mi contribución al mundo.',
                details: `
                    <h3>🎯 Mis objetivos profesionales:</h3>
                    <ul>
                        <li><strong>📈 Desarrollo de habilidades</strong></li>
                        <li><strong>🌟 Excelencia en mi trabajo</strong></li>
                        <li><strong>🤝 Red profesional</strong></li>
                        <li><strong>⚖️ Balance trabajo-vida</strong></li>
                    </ul>
                `
            },
            relaciones: {
                icon: '❤️',
                title: 'RELACIONES - Mis Conexiones Humanas',
                description: 'Las relaciones son el corazón de una vida plena. Cultivo vínculos profundos y significativos.',
                details: `
                    <h3>🎯 Mis objetivos relacionales:</h3>
                    <ul>
                        <li><strong>❤️ Profundizar vínculos existentes</strong></li>
                        <li><strong>🤝 Crear nuevas amistades</strong></li>
                        <li><strong>🗣️ Comunicación auténtica</strong></li>
                        <li><strong>🙏 Gratitud relacional</strong></li>
                    </ul>
                `
            },
            crecimiento: {
                icon: '🌱',
                title: 'CRECIMIENTO - Mi Evolución Personal',
                description: 'El crecimiento personal es un viaje donde desarrollo mi potencial y me convierto en mi mejor versión.',
                details: `
                    <h3>🎯 Áreas de crecimiento:</h3>
                    <ul>
                        <li><strong>🧠 Inteligencia emocional</strong></li>
                        <li><strong>💪 Resiliencia y adaptación</strong></li>
                        <li><strong>🎯 Autodisciplina</strong></li>
                        <li><strong>🧘 Mindfulness y presencia</strong></li>
                    </ul>
                `
            },
            finanzas: {
                icon: '💰',
                title: 'FINANZAS - Mi Libertad Económica',
                description: 'Las finanzas saludables me dan libertad y tranquilidad para perseguir mis sueños.',
                details: `
                    <h3>🎯 Mis objetivos financieros:</h3>
                    <ul>
                        <li><strong>💰 Fondo de emergencia</strong></li>
                        <li><strong>📊 Presupuesto consciente</strong></li>
                        <li><strong>📈 Inversiones inteligentes</strong></li>
                        <li><strong>📚 Educación financiera</strong></li>
                    </ul>
                `
            },
            pasiones: {
                icon: '🎨',
                title: 'PASIONES - Lo Que Me Hace Vibrar',
                description: 'Mis pasiones y hobbies nutren mi alma y me conectan con la alegría pura.',
                details: `
                    <h3>🎯 Mis pasiones actuales:</h3>
                    <ul>
                        <li><strong>🎨 Creatividad y arte</strong></li>
                        <li><strong>📚 Aprendizaje continuo</strong></li>
                        <li><strong>🌍 Viajes y aventuras</strong></li>
                        <li><strong>🎵 Música y expresión</strong></li>
                    </ul>
                `
            }
        };

        // Crear y mostrar modal
        function openModal(type) {
            // Eliminar modal existente si hay uno
            const existingModal = document.getElementById('infoModal');
            if (existingModal) {
                existingModal.remove();
            }

            const data = modalData[type];
            if (!data) return;

            const modal = document.createElement('div');
            modal.id = 'infoModal';
            modal.style.cssText = `
                display: block;
                position: fixed;
                z-index: 2000;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
                backdrop-filter: blur(5px);
            `;

            modal.innerHTML = `
                <div style="
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    margin: 5% auto;
                    padding: 40px;
                    border-radius: 20px;
                    width: 90%;
                    max-width: 600px;
                    color: white;
                    position: relative;
                    animation: modalSlideIn 0.5s ease;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                ">
                    <span onclick="closeModal()" style="
                        position: absolute;
                        top: 20px;
                        right: 30px;
                        color: white;
                        font-size: 40px;
                        font-weight: bold;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    ">&times;</span>
                    
                    <div style="display: flex; align-items: center; margin-bottom: 30px; border-bottom: 2px solid rgba(255, 255, 255, 0.3); padding-bottom: 20px;">
                        <div style="font-size: 3em; margin-right: 20px;">${data.icon}</div>
                        <div style="font-size: 2em; font-weight: bold;">${data.title}</div>
                    </div>
                    
                    <div style="font-size: 1.2em; line-height: 1.6; margin-bottom: 30px;">
                        ${data.description}
                    </div>
                    
                    <div style="background: rgba(255, 255, 255, 0.1); padding: 25px; border-radius: 15px; border-left: 5px solid #fff;">
                        ${data.details}
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // Cerrar al hacer clic fuera
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeModal();
                }
            });
        }

        // Cerrar modal
        function closeModal() {
            const modal = document.getElementById('infoModal');
            if (modal) {
                modal.remove();
            }
        }

        // Toggle modo edición (versión corregida)
        function toggleEditMode() {
            editMode = !editMode;
            const editables = document.querySelectorAll('.editable');
            const editBtn = document.querySelector('.edit-btn');
            const saveBtn = document.querySelector('.save-btn');
            
            if (editMode) {
                editables.forEach(el => {
                    el.contentEditable = 'true';
                    el.style.border = '2px dashed #3498db';
                    el.style.padding = '5px';
                    el.style.background = 'rgba(52, 152, 219, 0.1)';
                });
                editBtn.textContent = '❌ Salir de Edición';
                saveBtn.style.display = 'block';
            } else {
                editables.forEach(el => {
                    el.contentEditable = 'false';
                    el.style.border = 'none';
                    el.style.padding = '';
                    el.style.background = '';
                });
                editBtn.textContent = '🔧 Modo Edición';
                saveBtn.style.display = 'none';
            }
        }

        // Crear y mostrar modal con contenido editable
        function openModal(type) {
            const existingModal = document.getElementById('infoModal');
            if (existingModal) {
                existingModal.remove();
            }

            const data = modalData[type];
            if (!data) return;

            const modal = document.createElement('div');
            modal.id = 'infoModal';
            modal.style.cssText = `
                display: block;
                position: fixed;
                z-index: 2000;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
                backdrop-filter: blur(5px);
            `;

            modal.innerHTML = `
                <div style="
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    margin: 5% auto;
                    padding: 40px;
                    border-radius: 20px;
                    width: 90%;
                    max-width: 600px;
                    color: white;
                    position: relative;
                    animation: modalSlideIn 0.5s ease;
                    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                ">
                    <span onclick="closeModal()" style="
                        position: absolute;
                        top: 20px;
                        right: 30px;
                        color: white;
                        font-size: 40px;
                        font-weight: bold;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    ">&times;</span>
                    
                    <div style="display: flex; align-items: center; margin-bottom: 30px; border-bottom: 2px solid rgba(255, 255, 255, 0.3); padding-bottom: 20px;">
                        <div class="editable modal-icon" contenteditable="false" style="font-size: 3em; margin-right: 20px;">${data.icon}</div>
                        <div class="editable modal-title" contenteditable="false" style="font-size: 2em; font-weight: bold;">${data.title}</div>
                    </div>
                    
                    <div class="editable modal-description" contenteditable="false" style="font-size: 1.2em; line-height: 1.6; margin-bottom: 30px;">
                        ${data.description}
                    </div>
                    
                    <div style="background: rgba(255, 255, 255, 0.1); padding: 25px; border-radius: 15px; border-left: 5px solid #fff;">
                        <div class="editable modal-details" contenteditable="false">
                            ${data.details}
                        </div>
                    </div>
                    
                    <div style="margin-top: 20px; text-align: center;">
                        <button onclick="toggleModalEdit()" id="modalEditBtn" style="
                            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
                            color: white;
                            border: none;
                            padding: 10px 20px;
                            border-radius: 20px;
                            cursor: pointer;
                            font-weight: bold;
                            margin-right: 10px;
                        ">✏️ Editar Contenido</button>
                        
                        <button onclick="saveModalChanges('${type}')" id="modalSaveBtn" style="
                            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
                            color: white;
                            border: none;
                            padding: 10px 20px;
                            border-radius: 20px;
                            cursor: pointer;
                            font-weight: bold;
                            display: none;
                        ">💾 Guardar</button>
                    </div>
                </div>
            `;

            document.body.appendChild(modal);

            // Cerrar al hacer clic fuera
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeModal();
                }
            });
        }

        // Toggle edición dentro del modal
        function toggleModalEdit() {
            const modalEditables = document.querySelectorAll('#infoModal .editable');
            const editBtn = document.getElementById('modalEditBtn');
            const saveBtn = document.getElementById('modalSaveBtn');
            
            const isEditing = modalEditables[0].contentEditable === 'true';
            
            if (!isEditing) {
                // Activar edición
                modalEditables.forEach(el => {
                    el.contentEditable = 'true';
                    el.style.border = '2px dashed #fff';
                    el.style.padding = '5px';
                    el.style.background = 'rgba(255, 255, 255, 0.1)';
                    el.style.borderRadius = '5px';
                });
                editBtn.textContent = '❌ Cancelar Edición';
                editBtn.style.background = 'linear-gradient(135deg, #e67e22 0%, #d35400 100%)';
                saveBtn.style.display = 'inline-block';
            } else {
                // Cancelar edición
                modalEditables.forEach(el => {
                    el.contentEditable = 'false';
                    el.style.border = 'none';
                    el.style.padding = '';
                    el.style.background = '';
                });
                editBtn.textContent = '✏️ Editar Contenido';
                editBtn.style.background = 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)';
                saveBtn.style.display = 'none';
            }
        }

        // Guardar cambios del modal
        function saveModalChanges(type) {
            const modalIcon = document.querySelector('#infoModal .modal-icon');
            const modalTitle = document.querySelector('#infoModal .modal-title');
            const modalDescription = document.querySelector('#infoModal .modal-description');
            const modalDetails = document.querySelector('#infoModal .modal-details');
            
            // Actualizar datos en memoria
            if (modalData[type]) {
                modalData[type].icon = modalIcon.textContent;
                modalData[type].title = modalTitle.textContent;
                modalData[type].description = modalDescription.textContent;
                modalData[type].details = modalDetails.innerHTML;
            }
            
            // Guardar en localStorage
            localStorage.setItem('modalData_' + type, JSON.stringify(modalData[type]));
            
            // Mostrar confirmación
            const confirmDiv = document.createElement('div');
            confirmDiv.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
                color: white;
                padding: 15px 25px;
                border-radius: 10px;
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
                z-index: 3000;
                font-weight: bold;
                animation: slideInRight 0.5s ease;
            `;
            confirmDiv.innerHTML = '✅ Contenido guardado!';
            document.body.appendChild(confirmDiv);

            setTimeout(() => {
                confirmDiv.remove();
            }, 3000);
            
            // Desactivar modo edición del modal
            toggleModalEdit();
        }

        // Cargar datos personalizados de los modales
        function loadModalData() {
            Object.keys(modalData).forEach(type => {
                const saved = localStorage.getItem('modalData_' + type);
                if (saved) {
                    try {
                        modalData[type] = JSON.parse(saved);
                    } catch (e) {
                        console.log('Error cargando datos del modal:', type);
                    }
                }
            });
        }

        // Eventos para abrir modales
        document.addEventListener('DOMContentLoaded', function() {
            // Cargar datos personalizados
            loadModalData();
            
            // Función para manejar clics en elementos con modal
            function handleElementClick(element, modalType) {
                if (element) {
                    element.addEventListener('click', function(e) {
                        // Solo abrir modal si no estamos editando un elemento específico
                        if (!e.target.closest('.editable[contenteditable="true"]')) {
                            openModal(modalType);
                        }
                    });
                }
            }

            // Fases del círculo
            handleElementClick(document.querySelector('.sonar'), 'sonar');
            handleElementClick(document.querySelector('.planificar'), 'planificar');
            handleElementClick(document.querySelector('.realizar'), 'realizar');
            handleElementClick(document.querySelector('.celebrar'), 'celebrar');
            
            // Elementos del mandala
            handleElementClick(document.querySelector('.salud'), 'salud');
            handleElementClick(document.querySelector('.carrera'), 'carrera');
            handleElementClick(document.querySelector('.relaciones'), 'relaciones');
            handleElementClick(document.querySelector('.crecimiento'), 'crecimiento');
            handleElementClick(document.querySelector('.finanzas'), 'finanzas');
            handleElementClick(document.querySelector('.pasiones'), 'pasiones');
        });

        // Animación adicional
        const additionalStyle = document.createElement('style');
        additionalStyle.textContent = `
            @keyframes slideInRight {
                from {
                    opacity: 0;
                    transform: translateX(100px);
                }
                to {
                    opacity: 1;
                    transform: translateX(0);
                }
            }
        `;

        // Agregar estilos para la animación del modal
        const style = document.createElement('style');
        style.textContent = `
            @keyframes modalSlideIn {
                from {
                    opacity: 0;
                    transform: translateY(-50px) scale(0.8);
                }
                to {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
